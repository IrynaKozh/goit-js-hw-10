{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst myInput = document.querySelector(\"#datetime-picker\");\nconst btn = document.querySelector(\"[data-start]\");\nbtn.disabled = true;\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\nlet userSelectedDate = null;\nlet timerId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onChange(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n      btn.disabled = true;\n    } else {\n      btn.disabled = false;\n    }\n  }\n};\n\n\nflatpickr(myInput, options);\n\n\n\nbtn.addEventListener(\"click\", () => {\n  btn.disabled = true;\n  myInput.disabled = true;\n  timerId = setInterval(() => {\n    const now = new Date();\n    const ms = userSelectedDate - now;\n\n    if (ms <= 0) {\n      clearInterval(timerId);\n      updateTimer(0);\n      myInput.disabled = false;\n      return;\n    }\n\n    updateTimer(ms);\n  }, 1000);\n});\n\nfunction updateTimer(ms) {\n  const { days: d, hours: h, minutes: m, seconds: s } = convertMs(ms);\n  days.textContent = addLeadingZero(d);\n  hours.textContent = addLeadingZero(h);\n  minutes.textContent = addLeadingZero(m);\n  seconds.textContent = addLeadingZero(s);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}"],"names":["myInput","btn","days","hours","minutes","seconds","userSelectedDate","timerId","options","selectedDates","iziToast","flatpickr","ms","updateTimer","d","h","m","s","convertMs","addLeadingZero","value"],"mappings":"+IAKA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAM,SAAS,cAAc,cAAc,EACjDA,EAAI,SAAW,GACf,MAAMC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EACvD,IAAIC,EAAmB,KACnBC,EAAU,KAEd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,SAASC,EAAe,CACtBH,EAAmBG,EAAc,CAAC,EAC9BH,EAAmB,IAAI,MACzBI,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAI,SAAW,IAEfA,EAAI,SAAW,EAElB,CACH,EAGAU,EAAUX,EAASQ,CAAO,EAI1BP,EAAI,iBAAiB,QAAS,IAAM,CAClCA,EAAI,SAAW,GACfD,EAAQ,SAAW,GACnBO,EAAU,YAAY,IAAM,CAE1B,MAAMK,EAAKN,EADC,IAAI,KAGhB,GAAIM,GAAM,EAAG,CACX,cAAcL,CAAO,EACrBM,EAAY,CAAC,EACbb,EAAQ,SAAW,GACnB,MACD,CAEDa,EAAYD,CAAE,CACf,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAYD,EAAI,CACvB,KAAM,CAAE,KAAME,EAAG,MAAOC,EAAG,QAASC,EAAG,QAASC,CAAC,EAAKC,EAAUN,CAAE,EAClEV,EAAK,YAAciB,EAAeL,CAAC,EACnCX,EAAM,YAAcgB,EAAeJ,CAAC,EACpCX,EAAQ,YAAce,EAAeH,CAAC,EACtCX,EAAQ,YAAcc,EAAeF,CAAC,CACxC,CAEA,SAASC,EAAUN,EAAI,CAMrB,MAAMV,EAAO,KAAK,MAAMU,EAAK,KAAG,EAC1BT,EAAQ,KAAK,MAAOS,EAAK,MAAO,IAAI,EACpCR,EAAU,KAAK,MAAQQ,EAAK,MAAO,KAAQ,GAAM,EACjDP,EAAU,KAAK,MAASO,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASc,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC"}